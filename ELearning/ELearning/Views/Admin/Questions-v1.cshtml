@model ELearning.Models.QuestionViewModel
@{
    ViewBag.Title = $"Add Quiz Questions to '{Model.StoryTitle}'";
}

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <style>
        .collapseButton {
            vertical-align: text-top;
        }

        .hidden {
            display: none;
        }
    </style>

}

<div class="pagetitle">
    <h1>@ViewBag.Title</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("ManageStories")">Stories</a></li>
            <li class="breadcrumb-item active">@ViewBag.Title</li>
        </ol>
    </nav>
</div><!-- End Page Title -->

<section class="section">
    <div class="card">
        <div class="card-body pt-3">
            <div class="float-start mb-3">
                <button type="button" class="btn btn-sm btn-secondary" onclick="history.back()"><i class="bi bi-arrow-left-circle"></i> Back</button>
            </div>
            <div class="float-end mb-3">
                <button type="button" class="btn btn-sm btn-primary add-button" data-bs-toggle="modal" data-bs-target="#addNewQuestionModal">
                    Add New Question
                </button>
            </div>
             
            <div class="table-responsive-sm">
                <table class="table" id="tblQuestions">
                    <thead>
                        <tr class="table-dark">
                            <th></th>
                            <th>Question</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Questions.Count > 0)
                        {
                            foreach (var item in Model.Questions)
                            {
                                <tr id="tr_@item.ID">
                                    <td class="collapseButton" id="collapseTD_@item.ID" onclick="collapse(this)"><i class="bi bi-plus-circle"></i></td>
                                    <td class="editable">@item.Question</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-success edit-button" data-qid="@item.ID" data-aid="0" data-edit="question">Edit</button>
                                        <button type="button" class="btn btn-sm btn-danger delete-button" onclick="deleteQuestionAndAnswers(@item.ID)">Delete</button>
                                    </td>
                                </tr>

                                if (item.Answers.Count > 0)
                                {
                                    <tr class="hidden">
                                        <td></td>
                                        <td colspan=3>
                                            <table class="table tbl-answers">
                                                <thead class="table-secondary">
                                                    <tr>
                                                        <th scope="col"></th>
                                                        <th scope="col">Option</th>
                                                        <th scope="col">Correct Answer</th>
                                                        <th scope="col"></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var ans in item.Answers)
                                                    {
                                                        <tr class="ui-state-default" id="ans-@ans.ID">
                                                            <td><span class="ui-icon ui-icon-arrowthick-2-n-s"></span></td>
                                                            <td class="editable">@ans.Option</td>
                                                            <td class="editable-chk">
                                                                <input type="checkbox" name="td_answers_qid_@(item.ID)" id="chk_@ans.ID" value="@ans.ID" @Html.Raw(ans.IsCorrect ? "checked" : "") disabled />
                                                            </td>
                                                            <td>
                                                                <button type="button" class="btn btn-sm btn-success text-white edit-button" data-qid="@item.ID" data-aid="@ans.ID" data-edit="answer">Edit</button>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>

                                }
                            }
                        }
                        else
                        {
                            <tr class="no-question">
                                <td colspan="3" class="text-center align-middle">No records found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div> 
        </div>
    </div>

</section> 

<!-- Add New Question Modal -->
<div class="modal fade" id="addNewQuestionModal" tabindex="-1" aria-labelledby="addNewQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addNewQuestionModalLabel">Add New Question</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formQuestion">
                    <div class="mb-3">
                        <label for="exampleInputEmail1" class="form-label">Question</label> 
                        <textarea class="form-control" id="txtQuestion" rows="4"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="basic-url" class="form-label">Answers</label>
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <input class="form-check-input mt-0" type="checkbox" name="answers[]" value="1" aria-label="Checkbox for correct answer">
                            </div>
                            <input type="text" class="form-control" id="txtOption1" aria-describedby="answer-info">
                        </div>
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <input class="form-check-input mt-0" type="checkbox" name="answers[]" value="2" aria-label="Checkbox for correct answer">
                            </div>
                            <input type="text" class="form-control" id="txtOption2" aria-describedby="answer-info">
                        </div>
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <input class="form-check-input mt-0" type="checkbox" name="answers[]" value="3" aria-label="Checkbox for correct answer">
                            </div>
                            <input type="text" class="form-control" id="txtOption3" aria-describedby="answer-info">
                        </div>
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <input class="form-check-input mt-0" type="checkbox" name="answers[]" value="4" aria-label="Checkbox for correct answer">
                            </div>
                            <input type="text" class="form-control" id="txtOption4" aria-describedby="answer-info">
                        </div>
                        <div class="form-text" id="answer-info">Please select the correct answer.</div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-sm btn-primary" id="btnSave" onclick="saveQuestion(this)">Save changes</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/Scripts/jquery-ui-1.13.3.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".tbl-answers > tbody").sortable({
                cancel: ".disable-sort",
                update: function (event) {
                    var order = $(this).sortable('toArray');
                    $.ajax({
                        url: '@Url.Action("UpdateAnswerSorting", "Admin")',
                        type: 'POST',
                        data: { order: order },
                        beforeSend: function () {
                            Swal.showLoading();
                        },
                        success: function (result) {
                            if (result.success) {
                                swal.close();
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: result.message,
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error saving order:', error);
                        }
                    });
                }
            });

            var val_txtbx = "";
            var isCheck = false;
            // Handle edit button click
            $('#tblQuestions').on('click', '.edit-button', function () {
                var $row = $(this).closest('tr');
                var $cells = $row.find('td.editable');
                var $chkbx = $(this).closest('tr').find('input[type="checkbox"]');
                isCheck = $chkbx.is(":checked");

                if ($(this).hasClass('edit-button')) {
                    $(this).removeClass('edit-button').addClass('save-button').text('Save');
                    $('<button type="button" class="btn btn-sm btn-warning ms-1 me-3 cancel-button">Cancel</button>').insertAfter($(this));

                    $cells.each(function () {
                        var $cell = $(this);
                        var currentText = $cell.text();
                        $cell.html('<input type="text" class="form-control" value="' + currentText + '"/>');
                        val_txtbx = currentText;
                    });
                } else if ($(this).hasClass('save-button')) {
                    $(this).removeClass('save-button').addClass('edit-button').text('Edit');
                    $row.find('.cancel-button').remove();

                    $cells.each(function () {
                        var $cell = $(this);
                        var newValue = $cell.find('input').val();
                        $cell.text(newValue);
                    });
                }

                $chkbx.prop('disabled', false);
                $(".collapseButton").removeAttr("onclick");
                $(".tbl-answers > tbody").addClass("disable-sort");
                $(".delete-button").prop('disabled', true);
                $(".add-button").prop('disabled', true);
            });

            // Handle cancel button click
            $('#tblQuestions').on('click', '.cancel-button', function () {
                var $row = $(this).closest('tr');
                var $cells = $row.find('td.editable');
                var $chkbx = $(this).closest('tr').find('input[type="checkbox"]');

                $row.find('.save-button').removeClass('save-button').addClass('edit-button').text('Edit');
                $(this).remove();

                $cells.each(function () {
                    var $cell = $(this);
                    var currentText = $cell.find('input').val();
                    $cell.text(val_txtbx);
                });

                $chkbx.prop('checked', isCheck).prop('disabled', true);
                $(".collapseButton").attr("onclick", "collapse(this)");
                $(".tbl-answers > tbody").removeClass("disable-sort");
                $(".delete-button").prop('disabled', false);
                $(".add-button").prop('disabled', false);
            });

            //Handle selecting one correcting answer
            let answers = document.querySelectorAll("input[name='answers[]']");
            answers.forEach(b => b.addEventListener("change", tick));
            function tick(e) {
                let state = e.target.checked; // save state of changed checkbox
                answers.forEach(b => b.checked = false); // clear all checkboxes
                e.target.checked = state; // restore state of changed checkbox
            }


            // Handle save button click
            $('#tblQuestions').on('click', '.save-button', function () {
                var $row = $(this).closest('tr');
                var questionid = $(this).data("qid");
                var answerid = $(this).data("aid");
                var edit = $(this).data("edit");
                var $txtbx = $(this).closest('tr').find('input[type="text"]');
                var $chkbx = $(this).closest('tr').find('input[type="checkbox"]');
                isCheck = $chkbx.is(":checked");

                console.log(questionid);

                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "@Url.Action("SaveQuestionOrAnswer", "Admin")", // Controller/View
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({
                            questionid: questionid,
                            answerid: answerid,
                            edit_text: $txtbx.val(),
                            iscorrect: isCheck,
                            edit: edit
                        }),
                        dataType: 'json',
                        beforeSend: function () {
                            Swal.showLoading();
                        },
                        success: function(result) {
                            if (result.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: result.message,
                                }).then(function () {
                                    var $cells = $row.find('td.editable');

                                    $row.find('.save-button').removeClass('save-button').addClass('edit-button').text('Edit');
                                    $row.find('.cancel-button').remove();

                                    $cells.each(function () {
                                        var $cell = $(this);
                                        var currentText = $cell.find('input').val();
                                        $cell.text(currentText);
                                    });

                                    $(`input[name='td_answers_qid_${questionid}']`).prop('checked', false);
                                    $chkbx.prop('checked', isCheck).prop('disabled', true);
                                    $(".collapseButton").attr("onclick", "collapse(this)");
                                    $(".tbl-answers > tbody").removeClass("disable-sort");
                                    $(".delete-button").prop('disabled', false);
                                    $(".add-button").prop('disabled', false);
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: result.message,
                                });
                            }
                        }

                    });
            });
        });

        //Handle collapsible row for option answers
        function collapse(cell) {
            // Get the current row
            var row = cell.parentElement;

            // Find the tbody parent of the current row
            var tbody = row.closest('tbody');

            // Get all rows within the tbody
            var rows = Array.from(tbody.getElementsByTagName('tr'));

            // Calculate the index of the next row
            var targetIndex = rows.indexOf(row) + 1;

            // Ensure the targetIndex is within bounds
            if (targetIndex < rows.length) {
                var target_row = rows[targetIndex];

                // Toggle the display of the target row
                if (target_row.style.display === 'table-row') {
                    cell.innerHTML = '<i class="bi bi-plus-circle"></i>';
                    target_row.style.display = 'none';
                } else {
                    cell.innerHTML = '<i class="bi bi-dash-circle"></i>';
                    target_row.style.display = 'table-row';
                }
            }
        }

        //insert Question and Answer Options
        function saveQuestion(btn) {
            btn.disabled = true;
            btn.innerHTML = `<div class="spinner-border spinner-border-sm" role="status">
                               <span class="visually-hidden"> Loading...</span>
                            </div> Saving`;

            var correctAnswer = 0;
            $('[name="answers[]"]').each(function () {
                if ($(this).prop('checked') == true) {
                    correctAnswer = $(this).val();
                }
            });

            if (correctAnswer == 0) {
                alert("Please select one correct answer.");
                btn.disabled = false;
                btn.innerHTML = "Save Changes";
                return;
            }


            var questionAndAnswerModel = { //Passing data
                StoryID: @Model.StoryID,
                Question: $("#txtQuestion").val(), //Reading text box values using Jquery
                Option1: $("#txtOption1").val(),
                Option2: $("#txtOption2").val(),
                Option3: $("#txtOption3").val(),
                Option4: $("#txtOption4").val(),
                CorrectAnswer: correctAnswer,
            };

            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "@Url.Action("SaveQuestionAndOptions", "Admin")", // Controller/View
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        model: questionAndAnswerModel,
                        action: "add"
                    }),
                    dataType: 'json',
                    beforeSend: function () {
                        Swal.showLoading();
                    },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: "success",
                                title: result.message,
                            }).then(function () {
                                clearModalField();
                                $('#addNewQuestionModal').modal('hide');
                                $(".no-question").remove();
                                var questionContent = `<tr id="tr_${result.question.ID}">
                                    <td class="collapseButton" onclick="collapse(this)"><i class="bi bi-plus-circle"></i></td>
                                    <td class="editable">${result.question.Question}</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-success edit-button" data-qid="${result.question.ID}" data-aid="0" data-edit="question">Edit</button>
                                        <button type="button" class="btn btn-sm btn-danger delete-button" onclick="deleteQuestionAndAnswers(${result.question.ID})">Delete</button>
                                    </td>
                                </tr>
                                <tr class="hidden">
                                        <td></td>
                                        <td colspan=3>
                                            <table class="table tbl-answers">
                                                <thead class="table-secondary">
                                                    <tr>
                                                        <th scope="col"></th>
                                                        <th scope="col">Option</th>
                                                        <th scope="col">Correct Answer</th>
                                                        <th scope="col"></th>
                                                    </tr>
                                                </thead>
                                                <tbody>`;

                                $.each(result.question.Answers, function (index, value) {
                                    questionContent += `<tr class="ui-state-default" id="ans-${value.ID}">
                                                            <td><span class="ui-icon ui-icon-arrowthick-2-n-s"></span></td>
                                                            <td class="editable">${value.Option}</td>
                                                            <td class="editable-chk">
                                                                <input type="checkbox" name="td_answers_qid_${result.question.ID}" id="chk_${value.ID}" value="${value.ID}" ${value.IsCorrect ? "checked" : ""} disabled />
                                                            </td>
                                                            <td>
                                                                <button type="button" class="btn btn-sm btn-success text-white edit-button" data-qid="${result.question.ID}" data-aid="${value.ID}" data-edit="answer">Edit</button>
                                                            </td>
                                                        </tr>`;
                                });

                                questionContent += `
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>`;

                                $('#tblQuestions > tbody:last-child').append(questionContent);
                                $(".tbl-answers > tbody").sortable({
                                    cancel: ".disable-sort",
                                    update: function (event) {
                                        var order = $(this).sortable('toArray');
                                        $.ajax({
                                            url: '@Url.Action("UpdateAnswerSorting", "Admin")',
                                            type: 'POST',
                                            data: { order: order },
                                            beforeSend: function () {
                                                Swal.showLoading();
                                            },
                                            success: function (result) {
                                                if (result.success) {
                                                    swal.close();
                                                } else {
                                                    Swal.fire({
                                                        icon: "error",
                                                        title: result.message,
                                                    });
                                                }
                                            },
                                            error: function (xhr, status, error) {
                                                console.error('Error saving order:', error);
                                            }
                                        });
                                    }
                                });
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: result.message,
                            });
                        }

                        btn.disabled = false;
                        btn.innerHTML = "Save Changes";
                    }

                });
        }

        //Delete Question and Answers
        function deleteQuestionAndAnswers(questionid) {
            var storyModel = { //Passing data
                ID: questionid,
            };

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "@Url.Action("SaveQuestion", "Admin")", // Controller/View
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                model: storyModel,
                                action: "delete"
                            }),
                            dataType: 'json',
                            beforeSend: function () {
                                Swal.showLoading();
                            },
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Question and its answers has been deleted.",
                                        icon: "success"
                                    }).then(function () {
                                        $(`#tr_${questionid}`).next('tr').remove();
                                        $(`#tr_${questionid}`).remove();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: result.message,
                                    });
                                }
                            }

                        });
                }
            });
        }

        //Clear field in Add New Question Modal fields
        function clearModalField() {
            $('#txtQuestion').text('');
            $('[name="answers[]"]').prop('checked', false);
            $('#txtOption1').val('');
            $('#txtOption2').val('');
            $('#txtOption3').val('');
            $('#txtOption4').val('');
        }

    </script>
     


}
