@model ELearning.Models.TeacherViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Manage Teachers";
    Random _random = new Random();

    var stats = Request.QueryString["status"] != null ? Request.QueryString["status"].ToString() : "";
}

<div class="pagetitle">
    <h1>@ViewBag.Title</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Home</a></li>
            <li class="breadcrumb-item active">@ViewBag.Title</li>
        </ol>
    </nav>
</div><!-- End Page Title -->

<section class="section">

    @using (Html.BeginForm("ManageTeachers", "Admin", FormMethod.Get, new { @class = "g-3" }))
    {
    <div class="card">
        <div class="card-body pt-3">
            <div class="row">
                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <span class="input-group-text" id="spkeywords">Keywords</span>
                        @Html.TextBox("keywords", "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <span class="input-group-text" id="spclassid">Class</span> 
                        @Html.DropDownList("classid", new SelectList(Model.ClassList, "Value", "Text"), "All", new { @class = "form-select" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <span class="input-group-text" id="spstatus">Status</span>
                        <select class="form-select" id="status" name="status">
                            <option value="">All</option>
                            <option value="1" @Html.Raw(stats == "1" ? "selected" : "")>Verified</option>
                            <option value="0" @Html.Raw(stats == "0" ? "selected" : "")>Not Verified</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-auto">
                    <button type="submit" class="btn btn-sm btn-primary">Search</button>
                </div>
            </div>
        </div>
    </div>
    }

    <div class="card">
        <div class="card-body pt-3">
            <div class="float-end mb-3">
                @using (Html.BeginForm("ExportTeacherList", "Admin", FormMethod.Post, new { id = "formExportTeacher" }))
                {
                }

                <button type="button" class="btn btn-sm btn-success" onclick="document.getElementById('formExportTeacher').submit();"><i class="bi bi-file-earmark-arrow-down"></i> Export to Excel</button>
                <a href="@Url.Action("AddTeacher")" class="btn btn-sm btn-primary">Add New Teacher</a>
            </div>

            @Html.Raw(TempData["AlertMessage"])
            <div class="table-responsive-sm">
                <table class="table">
                    <thead class="table-dark">
                        <tr>
                            <th></th>
                            <th scope="col">Username</th>
                            <th scope="col">Name</th>
                            <th scope="col">Email</th>
                            <th scope="col">Class</th>
                            <th scope="col">Status</th>
                            <th scope="col">Action</th> 
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Teachers.Count > 0)
                        {
                            foreach (var item in Model.Teachers)
                            {
                                <tr id="tr_@item.ID">
                                    <td class="align-middle">
                                        @if (!string.IsNullOrEmpty(item.DefaultImageName))
                                        {
                                            <img src="~/Images/Users/@item.DefaultImageName?v=@_random.Next()" alt="@item.UserName" class="img-thumbnail" width="80" />
                                        }
                                        else
                                        {
                                            <img src="~/Images/Users/defaultstudentimage.png" alt="@item.UserName" class="img-thumbnail" width="80" />
                                        }
                                    </td>
                                    <td class="align-middle">@item.UserName</td>
                                    <td class="align-middle">@item.Name</td>
                                    <td class="align-middle">@item.Email</td>
                                    <td class="align-middle">
                                        @foreach (var sect in item.ClassSectionSelections)
                                        {
                                            <span class="badge bg-info">@Html.Raw($"{sect.ClassName} ({sect.SectionName})")</span>
                                        }
                                    </td>
                                    <td class="align-middle">
                                        <span class="badge rounded-pill @Html.Raw(item.IsActive ? "bg-success" : "bg-secondary")">@Html.Raw(item.IsActive ? "Active" : "InActive")</span>
                                        <span class="badge rounded-pill @Html.Raw(item.IsVerified ? "bg-success" : "bg-secondary")">@Html.Raw(item.IsVerified ? "Verified" : "Not Verified")</span>
                                    </td>
                                    <td class="align-middle">
                                        <button class="btn btn-sm @Html.Raw(item.IsVerified ? "btn-secondary" : "btn-warning")" onclick="verifyTeacher(@item.ID, @Html.Raw(!item.IsVerified).ToString().ToLower())">@Html.Raw(item.IsVerified ? "Unverify" : "Verify")</button>
                                        <a href="@Url.Action("EditTeacher", "Admin", new { id = item.ID })" class="btn btn-sm btn-success">Edit</a>
                                        <button class="btn btn-sm btn-danger" onclick="deleteTeacher(@item.ID)">Delete</button>
                                    </td> 
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="align-middle text-center">No records found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.Teachers.Count > 0)
            {
                @Html.Raw("Page" + (Model.Teachers.PageCount < Model.Teachers.PageNumber ? 0 : Model.Teachers.PageNumber) + " of " + Model.Teachers.PageCount)
                @Html.PagedListPager(Model.Teachers, page => Url.Action("ManageTeachers", new { page }))
            }
        </div>
    </div>

</section>

@section Scripts {
    <script>
        function deleteTeacher(teacherid) {
            var teacherModel = { //Passing data
                ID: teacherid,
            };

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "@Url.Action("DeleteTeacher", "Admin")", // Controller/View
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                model: teacherModel,
                                action: "delete"
                            }),
                            dataType: 'json',
                            beforeSend: function () {
                                Swal.showLoading();
                            },
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Teacher has been deleted.",
                                        icon: "success"
                                    }).then(function () {
                                        $(`#tr_${teacherid}`).remove();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: result.message,
                                    });
                                }
                            }

                        });
                }
            });
        }

        function verifyTeacher(teacherid, isverify) {
            Swal.fire({
                title: "Verify Teacher",
                text: "",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "@Url.Action("VerifyTeacher", "Admin")", // Controller/View
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                teacherid: teacherid,
                                isverify: isverify
                            }),
                            dataType: 'json',
                            beforeSend: function () {
                                Swal.showLoading();
                            },
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: "Verified!",
                                        text: "Teacher has been verified.",
                                        icon: "success"
                                    }).then(function () {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: result.message,
                                    });
                                }
                            }

                        });
                }
            });
        }

        function unLockTeacher(teacherid) {
            Swal.fire({
                title: "UnLock Teacher",
                text: "",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Accept"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "@Url.Action("UnLockUser", "Admin")", // Controller/View
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                userid: teacherid,
                                islock: false
                            }),
                            dataType: 'json',
                            beforeSend: function () {
                                Swal.showLoading();
                            },
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: "Verified!",
                                        text: "Teacher has been unlocked.",
                                        icon: "success"
                                    }).then(function () {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: result.message,
                                    });
                                }
                            }

                        });
                }
            });
        }
    </script> 
        
        
    
    
    
    }

