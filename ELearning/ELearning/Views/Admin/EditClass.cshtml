@model ELearning.Models.ClassEditViewModel
@{
    ViewBag.Title = "Edit Class";
}

<div class="pagetitle">
    <h1>@ViewBag.Title</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("ManageClasses")">Manage Classes</a></li>
            <li class="breadcrumb-item active">@ViewBag.Title</li>
        </ol>
    </nav>
</div><!-- End Page Title -->


<section class="section">
    <div class="card">
        <div class="card-body pt-3">
            <button type="button" class="btn btn-sm btn-secondary" onclick="history.back()"><i class="bi bi-arrow-left-circle"></i> Back</button>
            <hr class="border-light-subtle" />
            @using (Html.BeginForm("EditClass", "Admin", FormMethod.Post, new { id = "editClassForm" }))
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-form-label" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
                    @Html.HiddenFor(m => m.ID)
                </div> <!-- Sections Container -->
                <div id="sectionsContainer" class="mb-3">
                    <label class="col-form-label">Sections:</label>

                    <!-- Loop through existing sections in the model -->
                    @for (int i = 0; i < Model.Sections.Count; i++)
                    {
                        <div class="section-item mb-3" id="section-@i">
                            <label class="col-form-label">Section @Html.DisplayFor(m => m.Sections[i].Name)</label>
                            <div class="d-flex">
                                <!-- Section Name -->
                                @Html.TextBoxFor(m => m.Sections[i].Name, new { @class = "form-control section-input", required = "required" })

                                <!-- Multi-select for Teachers -->
                                @Html.DropDownListFor(m => m.Sections[i].TeacherID, new SelectList(Model.TeacherList, "ID", "Name", Model.Sections[i].TeacherID), "--", new { @class = "form-select ms-2 section-teacher", required = "required" })

                                <!-- Remove Section Button -->
                                <button type="button" class="btn btn-danger ms-2 removeSectionButton" data-index="@i">Remove</button>
                            </div>
                        </div>
                    }
                </div> <!-- Add Section Button -->
                <button type="button" class="btn btn-success" id="addSectionButton">Add Section</button> <!-- Submit Button -->
                <br /> 
                <button type="submit" class="btn btn-primary mt-5">Save Changes</button>
            }
        </div>
    </div>
</section>

@section Scripts {
    <script> 
        // Add Section functionality
        $('#addSectionButton').click(function () {
            var sectionIndex = $('.section-item').length; // Get current number of sections

            // Append new section
            $('#sectionsContainer').append(`
                <div class="section-item mb-3" id="section-${sectionIndex}">
                    <label class="col-form-label">Section ${sectionIndex + 1}:</label>
                    <div class="d-flex">
                        <input class="form-control section-input" id="SectionName-${sectionIndex}" name="Sections[${sectionIndex}].Name" type="text" required="">
                        <select class="form-select ms-2 section-teacher" id="TeacherID-${sectionIndex}" name="Sections[${sectionIndex}].TeacherID" required="">
                            <option>--</option>
                            @foreach (var teacher in Model.TeacherList)
                            {
                                <option value="@teacher.ID">@teacher.Name</option>
                            }
                        </select>
                        <button type="button" class="btn btn-danger ms-2 removeSectionButton" data-index="${sectionIndex}">Remove</button>
                    </div>
                </div>
            `); 
        });

        // Remove Section functionality
        $(document).on('click', '.removeSectionButton', function () {
            var sectionIndex = $(this).data('index');
            $(`#section-${sectionIndex}`).remove(); // Remove the section div
        });
    </script>
}
