@model ELearning.Models.QuestionViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = $"Add Quiz Questions to '{Model.StoryTitle}'";
}

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <style>
        .collapseButton {
            vertical-align: text-top;
        }

        .hidden {
            display: none;
        }
    </style>

}

<div class="pagetitle">
    <h1>@ViewBag.Title</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("ManageStories")">Stories</a></li>
            <li class="breadcrumb-item active">@ViewBag.Title</li>
        </ol>
    </nav>
</div><!-- End Page Title -->

<section class="section">
    <div class="card">
        <div class="card-body pt-3">
            <div class="float-start mb-3">
                <button type="button" class="btn btn-sm btn-secondary" onclick="history.back()"><i class="bi bi-arrow-left-circle"></i> Back</button>
            </div>
            <div class="float-end mb-3">
                <button type="button" class="btn btn-sm btn-primary add-button" data-bs-toggle="modal" data-bs-target="#addNewQuestionModal">
                    Add New Question
                </button>
            </div>

            <div class="table-responsive-sm">
                <table class="table" id="tblQuestions">
                    <thead>
                        <tr class="table-dark"> 
                            <th>Question</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Questions.Count > 0)
                        {
                            foreach (var item in Model.Questions)
                            {
                                <tr id="tr_@item.ID"> 
                                    <td class="editable">@item.Question</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-success edit-button" data-qid="@item.ID" data-aid="0" data-edit="question">Edit</button>
                                        <button type="button" class="btn btn-sm btn-danger delete-button" onclick="deleteQuestion(@item.ID)">Delete</button>
                                    </td>
                                </tr>

                            }
                        }
                        else
                        {
                            <tr class="no-question">
                                <td colspan="3" class="text-center align-middle">No records found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @if (Model.Questions.Count > 0)
            {
                @Html.Raw("Page" + (Model.Questions.PageCount < Model.Questions.PageNumber ? 0 : Model.Questions.PageNumber) + " of " + Model.Questions.PageCount)
                @Html.PagedListPager(Model.Questions, page => Url.Action("Questions", new { page }))
            }
        </div>
    </div>

</section>

<!-- Add New Question Modal -->
<div class="modal fade" id="addNewQuestionModal" tabindex="-1" aria-labelledby="addNewQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addNewQuestionModalLabel">Add New Question</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formQuestion">
                    <div class="mb-3">
                        <label for="exampleInputEmail1" class="form-label">Question</label>
                        <textarea class="form-control" id="txtQuestion" rows="4"></textarea>
                    </div> 

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-sm btn-primary" id="btnSave" onclick="saveQuestion(this)">Save changes</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/Scripts/jquery-ui-1.13.3.min.js"></script>
    <script>
        $(document).ready(function () { 
            var val_txtbx = ""; 
            // Handle edit button click
            $('#tblQuestions').on('click', '.edit-button', function () {
                var $row = $(this).closest('tr');
                var $cells = $row.find('td.editable'); 

                if ($(this).hasClass('edit-button')) {
                    $(this).removeClass('edit-button').addClass('save-button').text('Save');
                    $('<button type="button" class="btn btn-sm btn-warning ms-1 me-3 cancel-button">Cancel</button>').insertAfter($(this));

                    $cells.each(function () {
                        var $cell = $(this);
                        var currentText = $cell.text();
                        $cell.html('<input type="text" class="form-control" value="' + currentText + '"/>');
                        val_txtbx = currentText;
                    });
                } else if ($(this).hasClass('save-button')) {
                    $(this).removeClass('save-button').addClass('edit-button').text('Edit');
                    $row.find('.cancel-button').remove();

                    $cells.each(function () {
                        var $cell = $(this);
                        var newValue = $cell.find('input').val();
                        $cell.text(newValue);
                    });
                }

                $(".edit-button").prop('disabled', true);
                $(".delete-button").prop('disabled', true);
                $(".add-button").prop('disabled', true);
            });

            // Handle cancel button click
            $('#tblQuestions').on('click', '.cancel-button', function () {
                var $row = $(this).closest('tr');
                var $cells = $row.find('td.editable');

                $row.find('.save-button').removeClass('save-button').addClass('edit-button').text('Edit');
                $(this).remove();

                $cells.each(function () {
                    var $cell = $(this);
                    var currentText = $cell.find('input').val();
                    $cell.text(val_txtbx);
                });

                $(".edit-button").prop('disabled', false);
                $(".delete-button").prop('disabled', false);
                $(".add-button").prop('disabled', false);
            });

            //Handle selecting one correcting answer
            let answers = document.querySelectorAll("input[name='answers[]']");
            answers.forEach(b => b.addEventListener("change", tick));
            function tick(e) {
                let state = e.target.checked; // save state of changed checkbox
                answers.forEach(b => b.checked = false); // clear all checkboxes
                e.target.checked = state; // restore state of changed checkbox
            }


            // Handle save button click
            $('#tblQuestions').on('click', '.save-button', function () {
                var $row = $(this).closest('tr');
                var questionid = $(this).data("qid"); 
                var $txtbx = $(this).closest('tr').find('input[type="text"]'); 

                console.log(questionid);

                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "@Url.Action("UpdateQuestion", "Admin")", // Controller/View
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({
                            questionid: questionid, 
                            edit_text: $txtbx.val() 
                        }),
                        dataType: 'json',
                        beforeSend: function () {
                            Swal.showLoading();
                        },
                        success: function(result) {
                            if (result.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: result.message,
                                }).then(function () {
                                    var $cells = $row.find('td.editable');

                                    $row.find('.save-button').removeClass('save-button').addClass('edit-button').text('Edit');
                                    $row.find('.cancel-button').remove();

                                    $cells.each(function () {
                                        var $cell = $(this);
                                        var currentText = $cell.find('input').val();
                                        $cell.text(currentText);
                                    });

                                    $(".edit-button").prop('disabled', false);
                                    $(".delete-button").prop('disabled', false);
                                    $(".add-button").prop('disabled', false);
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: result.message,
                                });
                            }
                        }

                    });
            });
        });
         

        //insert Question and Answer Options
        function saveQuestion(btn) {
            btn.disabled = true;
            btn.innerHTML = `<div class="spinner-border spinner-border-sm" role="status">
                               <span class="visually-hidden"> Loading...</span>
                            </div> Saving`; 

            var questionAndAnswerModel = { //Passing data
                StoryID: @Model.StoryID,
                Question: $("#txtQuestion").val(), //Reading text box values using Jquery 
            };

            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "@Url.Action("AddQuestion", "Admin")", // Controller/View
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        model: questionAndAnswerModel,
                        action: "add"
                    }),
                    dataType: 'json',
                    beforeSend: function () {
                        Swal.showLoading();
                    },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: "success",
                                title: result.message,
                            }).then(function () { 
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: result.message,
                            });
                        }

                        btn.disabled = false;
                        btn.innerHTML = "Save Changes";
                    }

                });
        }

        //Delete Question and Answers
        function deleteQuestion(questionid) {
            var storyModel = { //Passing data
                ID: questionid,
            };

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "@Url.Action("SaveQuestion", "Admin")", // Controller/View
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                model: storyModel,
                                action: "delete"
                            }),
                            dataType: 'json',
                            beforeSend: function () {
                                Swal.showLoading();
                            },
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Question and its answers has been deleted.",
                                        icon: "success"
                                    }).then(function () {
                                        $(`#tr_${questionid}`).next('tr').remove();
                                        $(`#tr_${questionid}`).remove();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: result.message,
                                    });
                                }
                            }

                        });
                }
            });
        }

        //Clear field in Add New Question Modal fields
        function clearModalField() {
            $('#txtQuestion').text(''); 
        }

    </script>



}
